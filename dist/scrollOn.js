!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.ScrollOn=t():e.ScrollOn=t()}(window,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function l(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}n.r(t),n.d(t,"default",function(){return u});var i={parent:window,element:null,offset:0,scrollIn:function(){console.info("Scroll in element")},scrollOut:function(){console.info("Scroll out element")}},c=function(){function e(){o(this,e),this.cache=null;for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];this.callbacks=n.map(function(e){return{called:!1,name:e.name,callback:e}})}return l(e,[{key:"call",value:function(e){if(e&&e.name&&e.name!==this.cache){var t=this.callbacks.find(function(t){return t.name===e.name});t.called||(this.callbacks.forEach(function(e){e.called=!1}),t.callback(),t.called=!0,this.cache=t.name)}}}]),e}(),u=function(){function e(t){o(this,e),this.option=Object.assign(i,t),this.listener=this.listener.bind(this),this.scrollTop=0,this.elementTop=this.getElementTop(this.option.element),this.toggleFunctionManager=new c(this.option.scrollIn,this.option.scrollOut),this.elementTop&&(this.recountScroll(this.option.parent),this.init())}return l(e,[{key:"getTopCordinats",value:function(e){var t=e.getBoundingClientRect(),n=document.body,o=document.documentElement,r=window.pageYOffset||o.scrollTop||n.scrollTop,l=o.clientTop||n.clientTop||0,i=t.top+r-l;return Math.round(i)}},{key:"recountScroll",value:function(e){this.scrollTop=Math.round(e.pageYOffset)+this.option.offset}},{key:"getElementTop",value:function(e){var t=document.querySelector(e);return!!t&&Math.round(this.getTopCordinats(t))}},{key:"listener",value:function(){this.recountScroll(this.option.parent),this.scrollTop>=this.elementTop?this.toggleFunctionManager.call(this.option.scrollIn):this.toggleFunctionManager.call(this.option.scrollOut)}},{key:"init",value:function(){document.addEventListener("scroll",this.listener)}},{key:"destroy",value:function(){document.removeEventListener("scroll",this.listener)}}]),e}()}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,